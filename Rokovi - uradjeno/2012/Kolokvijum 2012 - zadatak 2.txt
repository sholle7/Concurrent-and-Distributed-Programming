2) Група од М припадника неког братства на прослави коју организује пије из великог заједничке
бачве која може да прими N купа пића (The Fraternity Party problem). Један несрећни члан који не сме да
пије је одговоран за замену бачву сваки пут када се постојећа испразни. Када неки члан жели да пије,
узима купу из бачве ако она није празна. Ако је бачва празна, буди несрећног члан и онда чека да се тај
врати са новом бачвом. Несрећног члана треба будити само када је бачва празна. Користећи условне
критичне регионе решити овај проблем, обезбедити да се пиће добије по редоследу пристизања
захтева.
-------------------------------------------------------------------------------------------------------------
const int M = ..., N = ...
//M - pripadnika, N - kupa pica
  struct Bar{
  int turn, request;
  int value;
};
Bar b;

void drinker (int id){
  int my_req;
  while (true){
    dance ();
    region(b){
	my_req = request++;
	await (value != 0 && my_req = turn);
    	value--;
	turn++;
    }
    drink ();
    sleep ();
  }
}

void refill (){
    while (true){
        region(b){
            await (value == 0);
    	    value = N;
        }
    }
}
